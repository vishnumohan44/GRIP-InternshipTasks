# -*- coding: utf-8 -*-
"""Task 1 - Supervised ML

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1A6hCUrPnqg5-C-sclI4EnMvnTzlYGhBd

## **The Sparks Foundation - Data Science and Business Analytics Intern**

## **Task 1 - Prediction Using Supervised Machine Learning**

## **Author: Vishnu Mohan**
In this regression task, we will predict the percentage of marks that a student is expected to score based upon the number of hours they studied. This is a simple linear regression task as it involves just two variables.

### **Importing necessary modules and reading the data**
"""

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

train_data = pd.read_csv('http://bit.ly/w-data')
train_data.head()

train_data.describe()

"""### **Visualizing the Data**"""

plt.scatter(train_data.Hours,train_data.Scores)
plt.title("Hours vs Percentage")
plt.xlabel("Hours")
plt.ylabel("Percentage")
plt.show()

train_data.boxplot(column=['Scores'])

"""### **Preparing the Data**"""

X = train_data['Hours']
y = train_data.Scores

X_arr = X.values
X = X_arr.reshape(-1,1)

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state = 0)

"""### **Training the model**"""

from sklearn.linear_model import LinearRegression
model = LinearRegression()

model.fit(X_train,y_train)
print("Training complete with a model score of",model.score(X_test,y_test)*100,"% accuracy")

plt.scatter(X,y)
plt.plot(X, model.intercept_+model.coef_*X)
plt.title("Hours vs Percentage")
plt.xlabel("Hours")
plt.ylabel("Percentage")
plt.show()

"""### **Making predictions**"""

hours = 9.25
pred = model.predict([[hours]])[0]
print("No of Hours:",hours)
print("Predicted Score:",pred)

"""### **Evaluating the model**"""

y_pred = model.predict(X_test)
from sklearn.metrics import mean_absolute_error
mean_absolute_error(y_test,y_pred)
